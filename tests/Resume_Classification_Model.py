{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Classification Report:\n",
      "               precision    recall  f1-score   support\n",
      "\n",
      "         Mid       1.00      1.00      1.00         1\n",
      "      Senior       1.00      1.00      1.00         2\n",
      "\n",
      "    accuracy                           1.00         3\n",
      "   macro avg       1.00      1.00      1.00         3\n",
      "weighted avg       1.00      1.00      1.00         3\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.neighbors import KNeighborsClassifier\n",
    "from sklearn.metrics import classification_report\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Example data representing resumes (years of experience, number of skills, resume length)\n",
    "data = {\n",
    "    'years_of_experience': [1, 3, 2, 5, 10, 7, 3, 1, 6, 8],\n",
    "    'num_skills': [3, 5, 4, 6, 8, 7, 5, 3, 6, 8],\n",
    "    'resume_length': [300, 450, 400, 600, 700, 650, 500, 350, 550, 680],\n",
    "    'experience_level': ['Entry', 'Mid', 'Mid', 'Senior', 'Senior', 'Senior', 'Mid', 'Entry', 'Senior', 'Senior']\n",
    "}\n",
    "\n",
    "# Convert to DataFrame\n",
    "df = pd.DataFrame(data)\n",
    "\n",
    "# Features (X) and target (y)\n",
    "X = df[['years_of_experience', 'num_skills', 'resume_length']]\n",
    "y = df['experience_level']\n",
    "\n",
    "# Split data into training and testing sets\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)\n",
    "\n",
    "# Train a K-Nearest Neighbors model\n",
    "knn = KNeighborsClassifier(n_neighbors=3)\n",
    "knn.fit(X_train, y_train)\n",
    "\n",
    "# Make predictions\n",
    "y_pred = knn.predict(X_test)\n",
    "\n",
    "# Evaluate the model\n",
    "print(\"Classification Report:\\n\", classification_report(y_test, y_pred))\n",
    "\n",
    "# Plotting the results\n",
    "# Create a bar plot of actual vs predicted experience levels for test data\n",
    "test_results = pd.DataFrame({'Actual': y_test, 'Predicted': y_pred})\n",
    "test_results = test_results.reset_index(drop=True)\n",
    "\n",
    "# Plot the comparison of actual vs predicted experience levels\n",
    "fig, ax = plt.subplots()\n",
    "test_results['Actual'].value_counts().plot(kind='bar', color='blue', alpha=0.5, label='Actual', ax=ax)\n",
    "test_results['Predicted'].value_counts().plot(kind='bar', color='orange', alpha=0.5, label='Predicted', ax=ax)\n",
    "ax.set_title('Actual vs Predicted Experience Level')\n",
    "ax.set_xlabel('Experience Level')\n",
    "ax.set_ylabel('Count')\n",
    "plt.legend()\n",
    "plt.show()\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "cmse802",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.21"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
